#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        horipu: horipu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp O &kp R &kp I &kp P &kp U &kp ENTER>;
            label = "HORIPU";
        };

        Horipu0811: Horipu0811 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp O &kp R &kp I &kp P &kp U &kp N0 &kp N8 &kp N1 &kp N1>;
            label = "HORIPU0811";
        };

        Horipu630811: Horipu630811 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp O &kp R &kp I &kp P &kp U &kp N6 &kp N3 &kp N0 &kp N8 &kp N1 &kp N1>;
            label = "HORIPU630811";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        zoom: zoom {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ZOOM";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_AC_ZOOM_IN>, <&kp C_AC_ZOOM_OUT>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
            label = "SCROLL_UP_DOWN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R                   &kp T                                                            &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S             &kp D         &kp F                   &mt LEFT_ALT G                           &kp MINUS               &kp H            &kp J  &lt 2 K    &kp L    &lt 2 ENTER
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V                   &kp B           &mt SPACE EXCLAMATION    &kp QUESTION            &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp TAB           &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_COMMAND LANG1  &lt 1 SPACE     &lt 2 LANG2              &lt_to_layer_0 2 ENTER  &lt 1 BACKSPACE                             &lt 4 ESC
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp ESC     &kp N7  &kp N8      &kp N9            &kp PLUS                                   &kp RA(RC(D))            &kp RA(RC(E))   &kp RA(RC(F))   &kp RA(RC(T))    &kp RA(RC(G))
&kp COMMA   &kp N4  &kp N5      &kp N6            &kp MINUS                  &kp TILDE       &kp LEFT_PARENTHESIS     &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp ENTER
&kp LSHIFT  &kp N1  &kp N2      &kp N3            &kp COLON  &kp AT_SIGN     &kp UNDERSCORE  &kp RIGHT_PARENTHESIS    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp UNDERSCORE
&kp EQUAL   &kp N0  &kp PERIOD  &kp LEFT_COMMAND  &kp SPACE  &kp LEFT_ALT    &kp ENTER       &mt BACKSPACE BACKSPACE                                                   &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans         &kp RG(F10)  &kp LG(LA(LS(SEMI)))                                  &horipu  &Horipu0811  &Horipu630811  &trans    &trans
&trans  &trans  &trans         &trans       &kp LG(LA(LS(N0)))                            &trans  &trans   &mkp MB1     &trans         &mkp MB2  &trans
&trans  &trans  &Horipu630811  &Horipu0811  &horipu               &kp LS(LG(NUMBER_4))    &trans  &trans   &trans       &trans         &trans    &trans
&trans  &trans  &trans         &trans       &kp SPACE             &trans                  &trans  &trans                                         &to 0
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        layer_3 {
            bindings = <
&trans  &kp LC(LS(TAB))     &kp PRINTSCREEN         &kp LC(TAB)              &trans                                     &trans  &kp HOME        &kp UP_ARROW    &kp END          &trans
&trans  &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)     &kp LC(LG(LEFT_ARROW))   &kp LC(LG(RIGHT_ARROW))            &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp LEFT_SHIFT      &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &trans                   &trans    &trans  &trans  &kp DELETE      &kp PAGE_UP     &kp PAGE_DOWN    &trans
&trans  &trans              &trans                  &trans                   &trans                   &trans    &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans            &trans       &bt BT_CLR_ALL  &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &bt BT_CLR      &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &to 0        &trans                                                    &trans
            >;

            sensor-bindings = <&none>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &trans
            >;

            sensor-bindings = <&none>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &to 0
            >;

            sensor-bindings = <&none>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
